version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: bukhindor-postgres
    environment:
      POSTGRES_DB: bukhindor
      POSTGRES_USER: bukhindor
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - bukhindor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bukhindor -d bukhindor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgPool-II
  pgpool:
    image: bitnami/pgpool:latest
    container_name: bukhindor-pgpool
    environment:
      POSTGRESQL_HOSTS: postgres:5432
      POSTGRESQL_USERNAME: bukhindor
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_DATABASE: bukhindor
      PGPOOL_ENABLE_POOL_HBA: "no"
      PGPOOL_ENABLE_LOAD_BALANCING: "yes"
      PGPOOL_ENABLE_STATEMENT_LOAD_BALANCING: "yes"
      PGPOOL_ENABLE_QUERY_CACHE: "yes"
      PGPOOL_ENABLE_POOL_PASSWD: "no"
    ports:
      - "5434:5432"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bukhindor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U bukhindor -d bukhindor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: bukhindor-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - bukhindor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: bukhindor-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./deployments/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - bukhindor-network
    depends_on:
      - bukhindor-api

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: bukhindor-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./deployments/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    networks:
      - bukhindor-network
    depends_on:
      - prometheus

  # Bukhindor API
  bukhindor-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - JWT_SECRET=${JWT_SECRET:-your-secret-key}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
        - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    container_name: bukhindor-api
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=bukhindor
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=bukhindor
      - PGPOOL_HOST=pgpool
      - PGPOOL_PORT=5432
      - PGPOOL_USER=bukhindor
      - PGPOOL_PASSWORD=${POSTGRES_PASSWORD:-password}
      - PGPOOL_DB=bukhindor
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - METRICS_PORT=9090
    ports:
      - "8080:8080"
      - "9091:9091"
    networks:
      - bukhindor-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  bukhindor-network:
    driver: bridge 