# Bukhindor Backend - Правила разработки

## Архитектура
- Чистая гексагональная архитектура
- Слои: web -> service -> adapters -> domain
- Зависимости направлены от внешнего слоя к внутреннему
- Интерфейсы определяются в потребляющем пакете

## Структура файлов
- `service.go` - только структура, конструктор и типы
- `external.go` - внешние интерфейсы (если нужны)
- Файлы реализации - вся логика и методы
- Максимум 400 строк на файл

## Технологии
- Fiber для HTTP сервера
- Squirrel для SQL запросов
- Goose для миграций
- Zap для логирования
- Cobra для CLI

## API
- REST API для Flutter приложения
- Swagger документация обязательна
- JSON ответы
- CORS настроен для Flutter

## База данных
- SQLite для разработки
- PostgreSQL для продакшена
- Миграции через Goose
- Прямая работа с SQL

## Тестирование
- Табличные тесты
- Моки через go.uber.org/mock
- Покрытие всех веток
- Изоляция зависимостей

## Логирование
- Структурированное логирование
- Zap logger
- Конфигурируемые уровни

## Безопасность
- JWT токены
- Хеширование паролей
- Валидация входных данных
- CORS настройки 