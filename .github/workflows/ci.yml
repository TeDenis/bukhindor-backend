name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.3.0
          args: --timeout=5m

      - name: Run tests
        run: go test -v ./...

  deploy:
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Prepare repository on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}
          script: |
            set -e
            TAG=$(echo "${{ github.sha }}" | cut -c1-7)
            DEPLOY_PATH=${{ secrets.DEPLOY_PATH }}
            if [ -z "$DEPLOY_PATH" ]; then DEPLOY_PATH="$HOME/bukhindor-backend"; fi
            if [ ! -d "$DEPLOY_PATH/.git" ]; then
              git clone https://github.com/${{ github.repository }} "$DEPLOY_PATH"
            fi
            cd "$DEPLOY_PATH"
            git fetch --all
            git checkout ${{ github.ref_name }} || git checkout -B ${{ github.ref_name }}
            git reset --hard ${{ github.sha }}

      - name: Build Docker image on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}
          script: |
            set -e
            TAG=$(echo "${{ github.sha }}" | cut -c1-7)
            DEPLOY_PATH=${{ secrets.DEPLOY_PATH }}
            if [ -z "$DEPLOY_PATH" ]; then DEPLOY_PATH="$HOME/bukhindor-backend"; fi
            cd "$DEPLOY_PATH"
            docker build -t bukhindor-api:$TAG .

      - name: Run DB migrations on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}
          script: |
            set -e
            TAG=$(echo "${{ github.sha }}" | cut -c1-7)
            # Запуск CLI для миграций во временном контейнере с env из секретов
            docker run --rm \
              -e POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}' \
              -e POSTGRES_PORT='${{ secrets.POSTGRES_PORT }}' \
              -e POSTGRES_USER='${{ secrets.POSTGRES_USER }}' \
              -e POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' \
              -e POSTGRES_DB='${{ secrets.POSTGRES_DB }}' \
              -e POSTGRES_SSLMODE='${{ secrets.POSTGRES_SSLMODE }}' \
              bukhindor-api:$TAG \
              cli migrate up

      - name: Run new version on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_KEY_PASSWORD }}
          script: |
            set -e
            TAG=${GITHUB_SHA::7}
            CONTAINER_NAME=bukhindor-api
            docker rm -f $CONTAINER_NAME 2>/dev/null || true
            docker run -d --restart unless-stopped \
              --name $CONTAINER_NAME \
              -p 8081:8080 -p 9091:9091 \
              -e SERVER_PORT=8080 \
              -e SERVER_HOST=0.0.0.0 \
              -e POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}' \
              -e POSTGRES_PORT='${{ secrets.POSTGRES_PORT }}' \
              -e POSTGRES_USER='${{ secrets.POSTGRES_USER }}' \
              -e POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' \
              -e POSTGRES_DB='${{ secrets.POSTGRES_DB }}' \
              -e POSTGRES_SSLMODE='${{ secrets.POSTGRES_SSLMODE }}' \
              -e REDIS_URL='${{ secrets.REDIS_URL }}' \
              -e REDIS_PASSWORD='${{ secrets.REDIS_PASSWORD }}' \
              -e REDIS_DB='${{ secrets.REDIS_DB }}' \
              -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
              -e LOG_LEVEL='${{ secrets.LOG_LEVEL }}' \
              -e LOG_FORMAT='${{ secrets.LOG_FORMAT }}' \
              -e METRICS_PORT=9091 \
              bukhindor-api:$TAG

